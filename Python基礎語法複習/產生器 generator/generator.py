# https://steam.oxxostudio.tw/category/python/basic/generator.html

# *****************************************************************************************************

# 產生器是一個 Python 序列製作物件，***可以用它來迭代一個可能很大的序列***，在迭代的過程中所產生的值都是動態的，***不需要將整個序列儲存在記憶體中***。
#
# **產生器的特性：**
#
# 1. 產生器是記錄「***產生值的方法***」，而不是記錄值。
# 2. 用產生器中「***產生的值只能取用一次***」，無法重新啟動或重新取得 ( 因為不會紀錄 )

# *****************************************************************************************************

# 範例：
#
# **產生器表示式：**
#
# 產生器表示式跟生成式的格式很像，差別在於***將中括號「[]」改成小括號「()」***
a = [i for i in range(10)]  # 串列生成式
b = (i for i in range(10))  # 產生器表示式

print(a)   # [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]

# 無法 重新取得
print(b)   # <generator object <genexpr> at 0x7fbb6facba50>

# *****************************************************************************************************

# ***可以使用類似 for 迴圈的方式取出產生器的值***，但所有的值都只能取出一次
#
# 以下方的程式為例：
#
# 如果是串列生成式，因為記憶體中保留了整份串列，所以再次取值時還是能得到數值
#
# 如果是使用產生器表示式，再次取值時，就完全取不到值。
a = [i**2 for i in range(10)]
for i in a:
    print(i, end=' ')    # 0 1 4 9 16 25 36 49 64 81
for i in a:
    print(i, end=' ')    # 0 1 4 9 16 25 36 49 64 81


b = (i**2 for i in range(10))
for i in b:
    print(i, end=' ')    # 0 1 4 9 16 25 36 49 64 81
for i in b:
    print(i, end=' ')    # 取不到值

# *****************************************************************************************************

# 也可使用「next」的方法依序取值，但如果最後取不到值就會發生錯誤
a = (i**2 for i in range(10))  # 產生器表示式
print(next(a))  # 0
print(next(a))  # 1
print(next(a))  # 4
print(next(a))  # 9
print(next(a))  # 16
print(next(a))  # 25
print(next(a))  # 36
print(next(a))  # 49
print(next(a))  # 64
print(next(a))  # 81
print(next(a))  # 發生錯誤，因為取不到值